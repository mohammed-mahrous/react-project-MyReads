{"version":3,"sources":["BooksAPI.js","components/Book.js","components/BookShelf.js","components/ListBooks.js","components/SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","get","bookId","fetch","concat","then","res","json","data","book","getAll","books","update","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","props","updatebook","BooksAPI","value","SetShelf","_useState","useState","_useState2","slicedToArray","SetBook","_useState3","_useState4","Shelf","useEffect","val","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","disabled","onClick","String","fromCharCode","title","authors","map","element","length","BookShelf","shelftitle","shelfName","Books","setBooks","filter","e","components_Book","key","ListBooks","components_BookShelf","Link","to","SearchBooks","state","Updatebooks","trim","error","_this","setState","_this2","this","getbookshelf","type","placeholder","onChange","target","children","bookshelf","Component","BooksApp","Route","exact","path","render","components_ListBooks","components_SearchBooks","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"2OACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAGNS,EAAM,SAACC,GAAD,OACjBC,MAAK,GAAAC,OAAIb,EAAJ,WAAAa,OAAiBF,GAAU,CAAEJ,YAC/BO,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,QAEVC,EAAS,kBACpBP,MAAK,GAAAC,OAAIb,EAAJ,UAAiB,CAAEO,YACrBO,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKG,SAEVC,EAAS,SAACH,EAAMI,GAAP,OACpBV,MAAK,GAAAC,OAAIb,EAAJ,WAAAa,OAAiBK,EAAKK,IAAM,CAC/BC,OAAQ,MACRjB,QAAQkB,OAAAC,EAAA,EAAAD,CAAA,GACHlB,EADE,CAELoB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAER,YACtBR,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERe,EAAS,SAACC,GAAD,OACpBpB,MAAK,GAAAC,OAAIb,EAAJ,WAAkB,CACrBwB,OAAQ,OACRjB,QAAQkB,OAAAC,EAAA,EAAAD,CAAA,GACHlB,EADE,CAELoB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEE,YACtBlB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKG,SC8CRa,MArFf,SAAcC,GACZ,IAAMC,EAAa,SAACjB,EAAMI,GACxBc,EAAgBlB,EAAMI,GAAOR,KAAK,SAACuB,GACjCC,EAAShB,MAILJ,EAASgB,EAAThB,KAPWqB,EAUKC,mBAAStB,GAVduB,EAAAhB,OAAAiB,EAAA,EAAAjB,CAAAc,EAAA,GAUZN,EAVYQ,EAAA,GAUNE,EAVMF,EAAA,GAAAG,EAWOJ,mBAASP,EAAKX,OAXrBuB,EAAApB,OAAAiB,EAAA,EAAAjB,CAAAmB,EAAA,GAWZE,EAXYD,EAAA,GAWLP,EAXKO,EAAA,GAmBnB,OANAE,oBAAU,WACRX,EAAalB,EAAKK,IAAIT,KAAK,SAACkC,GAC1BV,EAASU,EAAI1B,OACbqB,EAAQK,MAET,IAEDC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACVC,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,gBAAe,OAAA3C,OACbK,EAAKuC,WAAWC,UACZxC,EAAKuC,WAAWC,UAChB,iCAHS,QAOnBT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAQd,MAAM,OAAOsB,UAAQ,GAA7B,cAGAV,EAAAC,EAAAC,cAAA,UACEd,MAAiB,qBAAVS,EACPc,QAAS,WACPzB,EAAWjB,EAAM,sBAGR,qBAAV4B,GAAgCe,OAAOC,aAAa,OANvD,qBASAb,EAAAC,EAAAC,cAAA,UACEd,MAAiB,eAAVS,EACPc,QAAS,WACPzB,EAAWjB,EAAM,gBAGR,eAAV4B,GAA0Be,OAAOC,aAAa,OANjD,gBASAb,EAAAC,EAAAC,cAAA,UACEd,MAAiB,SAAVS,EACPc,QAAS,WACPzB,EAAWjB,EAAM,UAGR,SAAV4B,GAAoBe,OAAOC,aAAa,OAN3C,QASAb,EAAAC,EAAAC,cAAA,UAAQd,MAAM,QAAd,WAINY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAclC,EAAK6C,OAClCd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZlC,EAAK8C,QACF9C,EAAK8C,QAAQC,IAAI,SAACC,GAChB,OAAOA,IAAYhD,EAAK8C,QAAQ9C,EAAK8C,QAAQG,OAAS,GAA/C,GAAAtD,OACAqD,GADA,GAAArD,OAEAqD,EAFA,QAIT,aChDCE,MA9Bf,SAAmBlC,GAAO,IAChBmC,EAA0BnC,EAA1BmC,WAAYC,EAAcpC,EAAdoC,UADI/B,EAEEC,mBAAS,IAFXC,EAAAhB,OAAAiB,EAAA,EAAAjB,CAAAc,EAAA,GAEjBgC,EAFiB9B,EAAA,GAEV+B,EAFU/B,EAAA,GAiBxB,OAdAM,oBAAU,WACRX,IAAkBtB,KAAK,SAACkC,GAAD,OACrBwB,EAASxB,EAAIyB,OAAO,SAACC,GAAD,OAAOA,EAAEpD,QAAUgD,QAExC,IACHvB,oBACE,WACEX,IAAkBtB,KAAK,SAACkC,GAAD,OACrBwB,EAASxB,EAAIyB,OAAO,SAACC,GAAD,OAAOA,EAAEpD,QAAUgD,QAG3C,CAACC,IAIDtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBiB,GACjCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXmB,EAAMN,IAAI,SAAC/C,GAAD,OACT+B,EAAAC,EAAAC,cAACwB,EAAD,CAAMzD,KAAMA,EAAM0D,IAAK1D,EAAKK,WCMzBsD,MA7Bf,SAAmB3C,GACjB,OACEe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAD,CACET,WAAW,oBACXC,UAAU,qBAEZrB,EAAAC,EAAAC,cAAC2B,EAAD,CAAWR,UAAU,aAAaD,WAAW,iBAC7CpB,EAAAC,EAAAC,cAAC2B,EAAD,CAAWT,WAAW,OAAOC,UAAU,WAG3CrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAG,WACP/B,EAAAC,EAAAC,cAAA,yECsCK8B,6MAtDbC,MAAQ,CACNlD,MAAO,GACPZ,MAAO,MAGT+D,YAAc,SAAC9C,GACbD,EAAgBC,EAAM+C,QAAQtE,KAAK,SAACM,GAC9BA,IAAUA,EAAMiE,MAClBC,EAAKC,SAAS,CAAEnE,MAAOA,IAEvBkE,EAAKC,SAAS,CACZnE,MAAO,gFAKN,IAAAoE,EAAAC,KACCC,EAAiBD,KAAKvD,MAAtBwD,aACR,OACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAM3B,UAAU,eAAe4B,GAAG,KAAlC,SAGA/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BASbH,EAAAC,EAAAC,cAAA,SACEwC,KAAK,OACLC,YAAY,4BACZC,SACE,SAACnB,GAAD,OAAOc,EAAKL,YAAYT,EAAEoB,OAAOzD,YAKzCY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MACEC,UAAU,aACV2C,SAAUN,KAAKP,MAAM9D,MAAM6C,IAAI,SAAC/C,GAAD,OAC7B+B,EAAAC,EAAAC,cAACwB,EAAD,CAAMzD,KAAMA,EAAM0D,IAAK1D,EAAKK,GAAIyE,UAAWN,iBA/C/BO,aCSXC,MATf,SAAkBhE,GAChB,OACEe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAMrD,EAAAC,EAAAC,cAACoD,EAAD,SACpCtD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAMrD,EAAAC,EAAAC,cAACqD,EAAD,iBCJhDC,IAASH,OACPrD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,KACEzD,EAAAC,EAAAC,cAACwD,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.231cf8de.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nfunction Book(props) {\n  const updatebook = (book, shelf) => {\n    BooksAPI.update(book, shelf).then((value) => {\n      SetShelf(shelf);\n    });\n  };\n\n  const { book } = props;\n  // console.log(bookshelf(book));\n\n  const [Book, SetBook] = useState(book);\n  const [Shelf, SetShelf] = useState(Book.shelf);\n\n  useEffect(() => {\n    BooksAPI.get(book.id).then((val) => {\n      SetShelf(val.shelf);\n      SetBook(val);\n    });\n  }, []);\n  return (\n    <li>\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 193,\n              backgroundImage: `url(${\n                book.imageLinks.thumbnail\n                  ? book.imageLinks.thumbnail\n                  : \"http://i.imgur.com/sJ3CT4V.gif\"\n              })`,\n            }}\n          />\n          <div className=\"book-shelf-changer\">\n            <select>\n              <option value=\"move\" disabled>\n                Move to...\n              </option>\n              <option\n                value={Shelf === \"currentlyReading\"}\n                onClick={() => {\n                  updatebook(book, \"currentlyReading\");\n                }}\n              >\n                {Shelf === \"currentlyReading\" && String.fromCharCode(10003)}\n                Currently Reading\n              </option>\n              <option\n                value={Shelf === \"wantToRead\"}\n                onClick={() => {\n                  updatebook(book, \"wantToRead\");\n                }}\n              >\n                {Shelf === \"wantToRead\" && String.fromCharCode(10003)}\n                Want to Read\n              </option>\n              <option\n                value={Shelf === \"read\"}\n                onClick={() => {\n                  updatebook(book, \"read\");\n                }}\n              >\n                {Shelf === \"read\" && String.fromCharCode(10003)}\n                Read\n              </option>\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"book-title\">{book.title}</div>\n        <div className=\"book-authors\">\n          {book.authors\n            ? book.authors.map((element) => {\n                return element === book.authors[book.authors.length - 1]\n                  ? `${element}`\n                  : `${element}, `;\n              })\n            : \"unkown\"}\n        </div>\n      </div>\n    </li>\n  );\n}\nexport default Book;\n","import React, { useEffect, useState } from \"react\";\nimport Book from \"./Book\";\nimport \"../App.css\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nfunction BookShelf(props) {\n  const { shelftitle, shelfName } = props;\n  const [Books, setBooks] = useState([]);\n  useEffect(() => {\n    BooksAPI.getAll().then((val) =>\n      setBooks(val.filter((e) => e.shelf === shelfName))\n    );\n  }, []);\n  useEffect(\n    () => {\n      BooksAPI.getAll().then((val) =>\n        setBooks(val.filter((e) => e.shelf === shelfName))\n      );\n    },\n    [Books]\n  );\n\n  return (\n    <div className=\"bookshelf\">\n      <h2 className=\"bookshelf-title\">{shelftitle}</h2>\n      <div className=\"bookshelf-books\">\n        <ol className=\"books-grid\">\n          {Books.map((book) => (\n            <Book book={book} key={book.id} />\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n}\nexport default BookShelf;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\nimport BookShelf from \"./BookShelf\";\n\nfunction ListBooks(props) {\n  return (\n    <div className=\"list-books\">\n      <div className=\"list-books-title\">\n        <h1>MyReads</h1>\n      </div>\n      <div className=\"list-books-content\">\n        <div>\n          <BookShelf\n            shelftitle=\"currently reading\"\n            shelfName=\"currentlyReading\"\n          />\n          <BookShelf shelfName=\"wantToRead\" shelftitle=\"want to read\" />\n          <BookShelf shelftitle=\"read\" shelfName=\"read\" />\n        </div>\n      </div>\n      <div className=\"open-search\">\n        <Link to=\"/search\">\n          <button> Add a book</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n// class ListBooks extends Component {\n//   render() {\n\n//   }\n// }\nexport default ListBooks;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nclass SearchBooks extends Component {\n  state = {\n    query: \"\",\n    books: [],\n  };\n\n  Updatebooks = (value) => {\n    BooksAPI.search(value.trim()).then((books) => {\n      if (books && !books.error) {\n        this.setState({ books: books });\n      } else {\n        this.setState({\n          books: [],\n        });\n      }\n    });\n  };\n  render() {\n    const { getbookshelf } = this.props;\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to=\"/\">\n            Close\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n            <input\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n              onChange={\n                (e) => this.Updatebooks(e.target.value) // value={this.state.query}\n              }\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol\n            className=\"books-grid\"\n            children={this.state.books.map((book) => (\n              <Book book={book} key={book.id} bookshelf={getbookshelf} />\n            ))}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default SearchBooks;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport ListBooks from \"./components/ListBooks\";\nimport SearchBooks from \"./components/SearchBooks\";\n\nfunction BooksApp(props) {\n  return (\n    <div className=\"app\">\n      <Route exact path=\"/\" render={() => <ListBooks />} />\n      <Route exact path=\"/search\" render={() => <SearchBooks />} />\n    </div>\n  );\n}\n\nexport default BooksApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}